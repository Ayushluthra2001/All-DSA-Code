class Solution {
public:
    int solve(vector<int>& satisfaction, int index, int time,vector<vector<int> >& dp){
        if(index==satisfaction.size()) return 0;
        
        if(dp[index][time]!=-1) return dp[index][time];
        
        int include=time*satisfaction[index]+solve(satisfaction,index+1,time+1,dp);
        int exclude=solve(satisfaction,index+1,time,dp);
        return dp[index][time]=max(include,exclude);
    }
    int maxSatisfaction(vector<int>& satisfaction) {
        int index=0;
        int time=1;
        int n=satisfaction.size();
        vector<vector<int> > dp(n+1,vector<int>(n+1,-1));
        sort(satisfaction.begin(),satisfaction.end());
        return solve(satisfaction , index, time,dp);
    }
};
